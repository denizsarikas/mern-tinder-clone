import mongoose from "mongoose";

const cardsSchema = mongoose.Schema({
    name: String,
    imgUrl: String
})

export default mongoose.model('cards', cardsSchema);

import express from "express";
import mongoose from "mongoose";
import Cards from "./dbCards.js";
import Cors from  "cors";

//App Config

const app = express();
const port = process.env.PORT || 8001;
const connection_url = 'mongodb+srv://denizsarikas:Start123@tinder-backend.12kw3d6.mongodb.net/';

//Middlewares
app.use(express.json());
app.use(Cors());

//DB config
mongoose.connect(connection_url, {
    // useNewUrlParser: true,
    // useCreateIndex: true,
    // useUnifiedTopology: true,
});

//API Endpoints
app.get('/', (req, res) => (res.status(200).send('HELLO CLEVER PROGRAMMERS!!!')));

//callback does not supported anymore.
// app.post('/tinder/cards', (req, res) => {
//     const dbCard = req.body;

//     Cards.create(dbCard, (err, data) => {
//         if (err) {
//             res.status(500).send(err)
//         } else {
//             res.status(201).send(data)
//         }
//     });
// });

app.post('/tinder/cards', async (req, res) => {
    try {
      const dbCard = req.body;
  
      const data = await Cards.create(dbCard);
      res.status(201).send(data);
    } catch (err) {
      res.status(500).send(err);
    }
  });


app.get('/tinder/cards', async (req, res) => {

    try{
        const data = await Cards.find();
        res.status(200).send(data);
    }catch(err){
        res.status(500).send(err);
    }
    });



//Listener
app.listen(port, () => console.log(`listening on localhost: ${port}`))